
# The MIT License (MIT)
#
# Copyright (c) 2013 Igor Laborie
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# SecureSocial 2 Settings

smtp {
    host=smtp.gmail.com
    #port=25
    ssl=true
    user=your_name
    password=your_password
    from=your_email
}

securesocial {
    onLoginGoTo=/sdo/ligues
    onLogoutGoTo=/sdo/login
    # Enable SSL for oauth callback urls, login/signup/password recovery pages and the authenticator cookie
    ssl=false


    cookie {
        #name=id
        #path=/
        #domain=some_domain
        #httpOnly=true
        idleTimeoutInMinutes=30
        absoluteTimeOutInMinutes=720
    }

    twitter {
        requestTokenUrl="https://twitter.com/oauth/request_token"
        accessTokenUrl="https://twitter.com/oauth/access_token"
        authorizationUrl="https://twitter.com/oauth/authenticate"
        consumerKey=your_consumer_key
        consumerSecret=your_consumer_secret
    }

    facebook {
        authorizationUrl="https://graph.facebook.com/oauth/authorize"
        accessTokenUrl="https://graph.facebook.com/oauth/access_token"
        clientId=your_client_id
        clientSecret=your_client_secret
        # this scope is the minimum SecureSocial requires.  You can add more if required by your app.
        scope=email
    }

    google {
        authorizationUrl="https://accounts.google.com/o/oauth2/auth"
        accessTokenUrl="https://accounts.google.com/o/oauth2/token"
        clientId=your_client_id
        clientSecret=your_client_secret
        scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
    }

    userpass {
        # Enable username support, otherwise SecureSocial will use the emails as user names
        withUserNameSupport=false
        sendWelcomeEmail=true
        enableGravatarSupport=true
        tokenDuration=60
        tokenDeleteInterval=5
        signupSkipLogin=false
    }
}
